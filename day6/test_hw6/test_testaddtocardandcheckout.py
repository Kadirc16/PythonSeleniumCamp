# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from constants import globalConstants
from pathlib import Path
from datetime import date
from webdriver_manager.chrome import ChromeDriverManager

class TestTestaddtocardandcheckout():
  def setup_method(self):
    self.driver = webdriver.Chrome(ChromeDriverManager().install())
    self.folderPath =str (date.today())
    Path(self.folderPath).mkdir(exist_ok=True)
    self.vars = {}
  
  def teardown_method(self):
    self.driver.quit()
  
  def test_testaddtocardandcheckout(self):
    self.driver.get(globalConstants.URL)
    self.driver.maximize_window()
    self.waitForElementVisible((By.ID, globalConstants.idButton))
    self.driver.find_element(By.ID, globalConstants.idButton).click()
    self.driver.find_element(By.ID, globalConstants.idButton).send_keys("standard_user")
    self.waitForElementVisible((By.ID, globalConstants.passwordButton))
    self.driver.find_element(By.ID, globalConstants.passwordButton).click()
    self.driver.find_element(By.ID, globalConstants.passwordButton).send_keys("secret_sauce")
    self.waitForElementVisible((By.ID, globalConstants.loginButton))
    self.driver.find_element(By.ID, globalConstants.loginButton).click()
    self.waitForElementVisible((By.ID, "add-to-cart-sauce-labs-backpack"))
    self.driver.find_element(By.ID, "add-to-cart-sauce-labs-backpack").click()
    self.waitForElementVisible((By.ID, "add-to-cart-sauce-labs-bike-light"))
    self.driver.find_element(By.ID, "add-to-cart-sauce-labs-bike-light").click()
    self.waitForElementVisible((By.ID, "add-to-cart-sauce-labs-bolt-t-shirt"))
    self.driver.find_element(By.ID, "add-to-cart-sauce-labs-bolt-t-shirt").click()
    self.waitForElementVisible((By.ID, "add-to-cart-sauce-labs-fleece-jacket"))
    self.driver.find_element(By.ID, "add-to-cart-sauce-labs-fleece-jacket").click()
    self.waitForElementVisible((By.ID, "add-to-cart-sauce-labs-onesie"))
    self.driver.find_element(By.ID, "add-to-cart-sauce-labs-onesie").click()
    self.waitForElementVisible((By.ID, "add-to-cart-test.allthethings()-t-shirt-(red)"))
    self.driver.find_element(By.ID, "add-to-cart-test.allthethings()-t-shirt-(red)").click()
    self.waitForElementVisible((By.ID, "remove-sauce-labs-backpack"))
    assert self.driver.find_element(By.ID, "remove-sauce-labs-backpack").text == globalConstants.textRemove
    self.waitForElementVisible((By.ID, "remove-sauce-labs-bike-light"))
    assert self.driver.find_element(By.ID, "remove-sauce-labs-bike-light").text == globalConstants.textRemove
    self.waitForElementVisible((By.ID, "remove-sauce-labs-bolt-t-shirt"))
    assert self.driver.find_element(By.ID, "remove-sauce-labs-bolt-t-shirt").text == globalConstants.textRemove
    self.waitForElementVisible((By.ID, "remove-sauce-labs-fleece-jacket"))
    assert self.driver.find_element(By.ID, "remove-sauce-labs-fleece-jacket").text == globalConstants.textRemove
    self.waitForElementVisible((By.ID, "remove-sauce-labs-onesie"))
    assert self.driver.find_element(By.ID, "remove-sauce-labs-onesie").text == globalConstants.textRemove
    self.waitForElementVisible((By.ID, "remove-test.allthethings()-t-shirt-(red)"))
    assert self.driver.find_element(By.ID, "remove-test.allthethings()-t-shirt-(red)").text == globalConstants.textRemove
    self.waitForElementVisible((By.LINK_TEXT, "6"))
    self.driver.find_element(By.LINK_TEXT, "6").click()
    self.waitForElementVisible((By.ID, globalConstants.checkout))
    assert self.driver.find_element(By.ID, globalConstants.checkout).text == globalConstants.textCheckout

    self.driver.save_screenshot(f"{self.folderPath}/test-add-to-card-and-checkout.png")


  def waitForElementVisible(self,locator,timeout=5):
     WebDriverWait(self.driver,timeout).until(expected_conditions.visibility_of_element_located(locator))

    
  
